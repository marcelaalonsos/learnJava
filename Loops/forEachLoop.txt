For-Each Loops

Sometimes we need access to the elements' indices or we only want to iterate through a portion of a list.
If that's the casem a regular for loop or while loop is a great choice.
example:
for (int inventoryItem = 0; inventoryItem < inventoryItems.length; inventoryItem++) {
  // Print element at current index
  System.out.println(inventoryItems[inventoryItem]);
}

But sometimes we couldn't care less about the indices; we only care about the element itself.
At times like this, for-each loop comes in handy.

For-each loops, which are also referred to as enhanced loops, allow us to directly loop through each item in a list of items (like an array or arraylist) and perform some action with each item.

the syntax:
for (String inventoryItem : inventoryItems) {
  // Print element value
  System.out.println(inventoryItem);

}

Our enhanced loop contains 2 items: an enhanced for loop variable (inventoryItem) and a list to traverse through (inventoryItems).
We can read the : as "in" like this: for each inventoryItem in inventoryItems, print inventoryItem.

If we try to assign a new value to the enhanced for loop variable, the value stored in the array or ArrayList will not change.
This is because, for every iteration in the enhanced loop, the loop variable is assigned a copy of the list element.

NOTE: we can name the enhanced for loop variable whatever we want; using the singular of a plural is just a convention.
we can also encounter conventions like String word : sentence.
